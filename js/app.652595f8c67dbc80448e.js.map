{"version":3,"sources":["webpack:///./src/utilities/autobind.js","webpack:///./src/index.js","webpack:///./src/containers/App.js","webpack:///./src/components/StarField.js","webpack:///./src/components/Menu.js","webpack:///./src/images/spotify.png","webpack:///./src/images/play-pause.png","webpack:///./src/images/ffwd.png","webpack:///./src/images/more.png","webpack:///./src/images/rwd.png","webpack:///./src/images/stop.png","webpack:///./src/images/repeat.png","webpack:///./src/images/visualizer.png","webpack:///./src/components/OrbButton.js","webpack:///./src/images/time.png","webpack:///./src/images/track.png","webpack:///./src/songs/sample.mp3"],"names":["obj","getOwnPropertyNames","constructor","prototype","forEach","prop","bind","__webpack_require__","_reactDom2","render","_react2","createElement","_App2","document","getElementById","_react","_AmbientLight","_DirectionalLight","_Scene","_PerspectiveCamera","_Geometries","_Materials","_Mesh","_WebGLRenderer","average","arr","reduce","p","c","length","formatTime","time","Math","trunc","toString","padStart","props","App","state","undefined","_this","setupScene","volumeLeft","volumeRight","stop","mount","removeChild","this","renderer","domElement","width","window","innerWidth","height","camera","aspect","updateProjectionMatrix","setSize","scene","Scene","PerspectiveCamera","position","z","y","ambient","AmbientLight","directional","DirectionalLight","set","add","WebGLRenderer","alpha","antialias","setPixelRatio","devicePixelRatio","setClearColor","appendChild","start","addCubes","analyzeAudio","addEventListener","onResize","frameId","requestAnimationFrame","animate","geometry","BoxGeometry","material","MeshLambertMaterial","color","leftCube","Mesh","rightCube","xOffset","rotateY","rotateX","rotation","x","random","sizeLeft","sizeRight","scale","audio","Audio","crossOrigin","src","_sample2","play","context","AudioContext","webkitAudioContext","createMediaElementSource","analyserLeft","createAnalyser","analyserRight","fftSize","smoothingTimeConstant","splitter","createChannelSplitter","connect","destination","bufferLengthLeft","frequencyBinCount","dataArrayLeft","Uint8Array","bufferLengthRight","dataArrayRight","renderFrame","getByteFrequencyData","setState","currentTime","rotateCubes","scaleCubes","renderScene","className","_track2","_time2","id","_Menu2","audioContext","_StarField2","randomSize","randomPosition","StarField","innerHeight","stars","addStars","animateStars","MeshBasicMaterial","sphere","push","star","animatedStar","Menu","_props","paused","ended","resume","pause","loopEnabled","loop","_OrbButton2","icon","_spotify2","_more2","_visualizer2","rewind","playOrPause","_ffwd2","toggleRepeat","module","exports","OrbButton","_ref","callback","onClick","alt","defaultProps","propTypes","_propTypes2","string","func"],"mappings":"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","file":"js/app.652595f8c67dbc80448e.js","sourcesContent":["/* eslint-disable no-param-reassign */\n/**\n * A helper function for making sure that instances of classes don't have to worry about what `this` means\n * (Can also be used to reduce constructor boilerplate in React components)\n * @param {object}\n * @returns {object} - input object, with each method's `this` bound to the instance\n */\nexport default function autobind(obj) {\n  Object.getOwnPropertyNames(obj.constructor.prototype).forEach(prop => {\n    if (typeof obj[prop] === 'function') {\n      obj[prop] = obj[prop].bind(obj);\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/autobind.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'containers/App';\n\nimport 'styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import React, { Component } from 'react';\nimport { AmbientLight } from 'three/src/lights/AmbientLight';\nimport { DirectionalLight } from 'three/src/lights/DirectionalLight';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { PerspectiveCamera } from 'three/src/cameras/PerspectiveCamera';\nimport { BoxGeometry } from 'three/src/geometries/Geometries';\nimport { MeshLambertMaterial } from 'three/src/materials/Materials';\nimport { Mesh } from 'three/src/objects/Mesh';\nimport { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\n\nimport autobind from 'utilities/autobind';\nimport StarField from 'components/StarField';\nimport Menu from 'components/Menu';\n\nimport timeSrc from 'images/time.png';\nimport trackSrc from 'images/track.png';\n\nimport songSrc from 'songs/sample.mp3';\n\nconst average = arr => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nconst formatTime = time =>\n  Math.trunc(time / 60)\n    .toString()\n    .padStart(2, '0') +\n  ':' +\n  Math.trunc(time % 60)\n    .toString()\n    .padStart(2, '0');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audio: undefined,\n      audioContext: undefined,\n      currentTime: 0,\n    };\n    autobind(this);\n  }\n\n  componentDidMount() {\n    this.setupScene();\n    this.volumeLeft = 1;\n    this.volumeRight = 1;\n  }\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  onResize() {\n    const width = window.innerWidth > 1000 ? 1000 : window.innerWidth;\n    const height = width * 0.75;\n    this.camera.aspect = width / height;\n\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n  }\n\n  setupScene() {\n    const width = window.innerWidth > 1000 ? 1000 : window.innerWidth;\n    const height = width * 0.75;\n\n    const scene = new Scene();\n    const camera = new PerspectiveCamera(20, width / height, 1, 1000);\n    camera.position.z = 45;\n    camera.position.y = -28.5;\n\n    const ambient = new AmbientLight(0xffffff, 0.35); // soft white light\n    const directional = new DirectionalLight(0xffffff, 0.7);\n    directional.position.set(0, 0, 900);\n    scene.add(ambient, directional);\n\n    const renderer = new WebGLRenderer({ alpha: true, antialias: false });\n    renderer.setPixelRatio(window.devicePixelRatio * 0.25); // Retina\n    // renderer.setPixelRatio(window.devicePixelRatio * 0.35); // Regular\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x000000, 0); // the default\n\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.mount.appendChild(this.renderer.domElement);\n    this.start();\n    this.addCubes();\n    this.analyzeAudio();\n    window.addEventListener('resize', this.onResize, false);\n  }\n\n  start() {\n    this.frameId = this.frameId || requestAnimationFrame(this.animate);\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  addCubes() {\n    const geometry = new BoxGeometry(1, 1, 1, 1, 1, 1);\n    const material = new MeshLambertMaterial({ color: 0x69ea78 });\n    const leftCube = new Mesh(geometry, material);\n    const rightCube = new Mesh(geometry, material);\n    this.leftCube = leftCube;\n    this.rightCube = rightCube;\n    this.geometry = geometry;\n    this.scene.add(leftCube, rightCube);\n\n    const xOffset = 7;\n\n    leftCube.position.set(xOffset * -1, -30, 0);\n    rightCube.position.set(xOffset, -30, 0);\n    rightCube.rotateY(0.75);\n    rightCube.rotateX(0.015);\n    leftCube.rotateX(0.015);\n  }\n\n  rotateCubes() {\n    this.leftCube.rotation.x += Math.random() * (0.03 - 0.01) + 0.01;\n    this.leftCube.rotation.y += Math.random() * (0.03 - 0.01) + 0.01;\n    this.rightCube.rotation.x -= Math.random() * (0.03 - 0.01) + 0.01;\n    this.rightCube.rotation.y -= Math.random() * (0.03 - 0.01) + 0.01;\n  }\n\n  scaleCubes() {\n    const sizeLeft = this.volumeLeft * 0.01 + 1;\n    const sizeRight = this.volumeRight * 0.01 + 1;\n\n    // TODO Vocal frequencies for red coloring?\n    // TODO/WTF R/L are swapped because of the camera/scene? hmm\n    //\n    this.leftCube.scale.set(sizeRight, sizeRight, sizeRight);\n    this.rightCube.scale.set(sizeLeft, sizeLeft, sizeLeft);\n    // orange 237\t192\t115\n    // red: 166\t53\t2\n  }\n\n  analyzeAudio() {\n    const audio = new Audio();\n    audio.crossOrigin = 'Anonymous';\n    audio.src = songSrc;\n    audio.play();\n    const AudioContext =\n      window.AudioContext || window.webkitAudioContext || false;\n    // TODO: Handle false!\n    const context = new AudioContext();\n    const src = context.createMediaElementSource(audio);\n    const analyserLeft = context.createAnalyser();\n    const analyserRight = context.createAnalyser();\n\n    analyserLeft.fftSize = 32;\n    analyserLeft.smoothingTimeConstant = 0.3;\n    analyserRight.fftSize = 32;\n    analyserRight.smoothingTimeConstant = 0.3;\n\n    const splitter = context.createChannelSplitter(2);\n\n    src.connect(splitter);\n\n    splitter.connect(analyserRight, 1, 0);\n    splitter.connect(analyserLeft, 0, 0);\n\n    analyserLeft.connect(context.destination);\n    analyserRight.connect(context.destination);\n\n    const bufferLengthLeft = analyserLeft.frequencyBinCount;\n    const dataArrayLeft = new Uint8Array(bufferLengthLeft);\n\n    const bufferLengthRight = analyserRight.frequencyBinCount;\n    const dataArrayRight = new Uint8Array(bufferLengthRight);\n\n    const renderFrame = () => {\n      requestAnimationFrame(renderFrame);\n      analyserLeft.getByteFrequencyData(dataArrayLeft);\n      analyserRight.getByteFrequencyData(dataArrayRight);\n\n      this.volumeLeft = average(dataArrayLeft);\n      this.volumeRight = average(dataArrayRight);\n      this.setState({ currentTime: formatTime(audio.currentTime) });\n    };\n\n    renderFrame();\n\n    this.audio = audio;\n    this.setState({\n      audio,\n      audioContext: context,\n    });\n  }\n\n  // idleAnimation() {\n  // TODO: Animate up and down while idle\n  // this.leftCube.rotation.y += 0.009;\n  // this.rightCube.rotation.y -= 0.009;\n  // }\n\n  animate() {\n    // if (this.state.playing) {\n    this.rotateCubes();\n    this.scaleCubes();\n    // } else {\n    //   this.idleAnimation();\n    // }\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return (\n      <div>\n        <header>\n        <div className=\"info\">\n          <div className=\"track\">\n            <img src={trackSrc} />\n          </div>\n          <div className=\"time\">\n            <img src={timeSrc} />\n          </div>\n          <div className=\"timer\">{currentTime}</div>\n          </div>\n          <div className=\"knight-rider\" />\n        </header>\n        <div id=\"canvas\" />\n        <div\n          className=\"cubes\"\n          ref={mount => {\n            this.mount = mount;\n          }}\n        />\n        <Menu audio={this.state.audio} audioContext={this.state.audioContext} />\n        <div className=\"dashboard\" />\n        <StarField />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/App.js","import React, { Component } from 'react';\n\nimport { Scene } from 'three/src/scenes/Scene';\nimport { PerspectiveCamera } from 'three/src/cameras/PerspectiveCamera';\nimport { BoxGeometry } from 'three/src/geometries/Geometries';\nimport { MeshBasicMaterial } from 'three/src/materials/Materials';\nimport { Mesh } from 'three/src/objects/Mesh';\nimport { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\n\nimport autobind from 'utilities/autobind';\n\nconst randomSize = () => Math.random() * (6 - 4) + 4;\nconst randomPosition = () => Math.random() * 1000 - 500;\nclass StarField extends Component {\n  constructor(props) {\n    super(props);\n\n    autobind(this);\n  }\n\n  componentDidMount() {\n    this.setupScene();\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n    this.stop();\n  }\n\n  onResize() {\n    const width = window.innerWidth > 1000 ? 1000 : window.innerWidth;\n    const height = window.innerHeight;\n    this.camera.aspect = width / height;\n\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n  }\n\n  setupScene() {\n    const width = window.innerWidth > 1000 ? 1000 : window.innerWidth;\n    const height = window.innerHeight;\n\n    const scene = new Scene();\n    const camera = new PerspectiveCamera(100, width / height, 1, 1000);\n\n    const renderer = new WebGLRenderer({ alpha: true, antialias: false });\n    camera.position.z = 500;\n\n    renderer.setPixelRatio(window.devicePixelRatio * 0.25);\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x000000, 0); // the default\n\n    this.camera = camera;\n    this.renderer = renderer;\n    this.scene = scene;\n    this.stars = this.stars || [];\n    this.mount.appendChild(this.renderer.domElement);\n    this.start();\n    this.addStars();\n    window.addEventListener('resize', this.onResize, false);\n  }\n\n  start() {\n    this.frameId = this.frameId || requestAnimationFrame(this.animate);\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    this.animateStars();\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  addStars() {\n    const geometry = new BoxGeometry(0.75, 0.75, 0.75);\n\n    for (let z = -1000; z < 1000; z += 20) {\n      let material;\n      if (z > 0 && z < 20) {\n        material = new MeshBasicMaterial({ color: 0xff757a });\n      } else {\n        material = new MeshBasicMaterial({ color: 0xffffff });\n      }\n\n      const sphere = new Mesh(geometry, material);\n\n      sphere.position.x = randomPosition();\n      sphere.position.y = randomPosition();\n      sphere.position.z = z;\n\n      sphere.scale.set(randomSize(), randomSize(), 1);\n\n      this.scene.add(sphere);\n      this.stars.push(sphere);\n    }\n  }\n\n  animateStars() {\n    this.stars.forEach(star => {\n      const animatedStar = star;\n\n      animatedStar.position.z += Math.random() * (8 - 4) + 4;\n\n      // if the particle is too close move it to the back\n      if (animatedStar.position.z > 1000) {\n        animatedStar.position.z -= 1100;\n        animatedStar.position.x = randomPosition();\n        animatedStar.position.y = randomPosition();\n      }\n    });\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div className=\"StarField\">\n        <div\n          ref={mount => {\n            this.mount = mount;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StarField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/StarField.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport spotifyIcon from 'images/spotify.png';\nimport playPauseIcon from 'images/play-pause.png';\nimport ffwdIcon from 'images/ffwd.png';\nimport moreIcon from 'images/more.png';\n\nimport rwdIcon from 'images/rwd.png';\nimport stopIcon from 'images/stop.png';\nimport repeatIcon from 'images/repeat.png';\nimport visualizerIcon from 'images/visualizer.png';\n\nimport autobind from 'utilities/autobind';\nimport OrbButton from 'components/OrbButton';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    autobind(this);\n  }\n\n  playOrPause() {\n    const { audio, audioContext } = this.props;\n    if (audio.paused || audio.ended) {\n      // iOS will auto-suspend AudioContext\n      // TODO: make this resume more intelligent\n      audioContext.resume();\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  }\n\n  rewind() {\n    const { audio } = this.props;\n    audio.currentTime = 0;\n  }\n\n  stop() {\n    const { audio } = this.props;\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  toggleRepeat() {\n    const { audio } = this.props;\n    const loopEnabled = audio.loop;\n    audio.loop = !loopEnabled;\n  }\n\n  render() {\n    return (\n      <ul>\n        <OrbButton className=\"gold\" icon={spotifyIcon} />\n        <OrbButton className=\"gold\" icon={moreIcon} />\n        <OrbButton className=\"gold\" icon={visualizerIcon} />\n        <OrbButton\n          className=\"middle rewind\"\n          icon={rwdIcon}\n          callback={this.rewind}\n        />\n        <OrbButton\n          className=\"middle play-pause\"\n          icon={playPauseIcon}\n          callback={this.playOrPause}\n        />\n        <OrbButton className=\"middle fast-forward\" icon={ffwdIcon} />\n        <OrbButton\n          className=\"bottom repeat\"\n          icon={repeatIcon}\n          callback={this.toggleRepeat}\n        />\n        <OrbButton\n          className=\"bottom stop\"\n          icon={stopIcon}\n          callback={this.stop}\n        />\n        <OrbButton className=\"bottom globe\" />\n      </ul>\n    );\n  }\n}\n\nexport default Menu;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Menu.js","module.exports = __webpack_public_path__ + \"/images/spotify.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/spotify.png\n// module id = 667\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/play-pause.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/play-pause.png\n// module id = 668\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/ffwd.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/ffwd.png\n// module id = 669\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/more.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/more.png\n// module id = 670\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/rwd.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/rwd.png\n// module id = 671\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/stop.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/stop.png\n// module id = 672\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/repeat.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/repeat.png\n// module id = 673\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/visualizer.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/visualizer.png\n// module id = 674\n// module chunks = 0","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OrbButton = ({ icon, className, callback }) => (\n  <li>\n    <button className={className} onClick={() => callback()}>\n      {icon && <img src={icon} alt=\"TODO\" />}\n    </button>\n  </li>\n);\n\nOrbButton.defaultProps = {\n  callback: () => {},\n  className: '',\n  icon: '',\n};\n\nOrbButton.propTypes = {\n  icon: PropTypes.string,\n  className: PropTypes.string,\n  callback: PropTypes.func,\n};\nexport default OrbButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OrbButton.js","module.exports = __webpack_public_path__ + \"/images/time.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/time.png\n// module id = 676\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/images/track.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/track.png\n// module id = 677\n// module chunks = 0","module.exports = __webpack_public_path__ + \"/songs/sample.mp3\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/songs/sample.mp3\n// module id = 678\n// module chunks = 0"],"sourceRoot":""}